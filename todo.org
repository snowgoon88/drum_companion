* __CURRENT__ : add time widget to drum_compagnon
* TODO [4/8] linux
** DONE [3/3] [dc] update PatternAudio (from vector of {0,1,2}) ?
Already existing as PatternAudio::Timeline
generalize it use when sig/beats change
*** DONE changed_val : at least one val has changed => button color
*** DONE need_notes : notes_btn not synchronized
=> with signature beats x subdiv
if (item_disabled)
            ImGui::BeginDisabled(true);
*** DONE apply changes to PatternAudio
** DONE [/] name patterns
** DONE [3/3] looper
*** DONE using Shunting Yard algorithm
- https://wcipeg.com/wiki/Shunting_yard_algorithm
- https://en.wikipedia.org/wiki/Shunting_yard_algorithm
*** DONE ({[]}) : group
*** DONE parse -> PatternList
** DONE [/] GUI with PatternList
** TODO [3/3] GUI for Looper
*** DONE InputText, get text when Apply => read the buffer
*** DONE make sure looper->_formula is set when properly analyzed
*** DONE link between analyzer Exceptions and LooperGui
** TODO [1/2] which Note is played 
*** DONE BeatSlider widget tested
*** TODO add to drum_compagnon
** TODO on/off synchronize all patterns
** TODO on/off relative bpm change
* TODO [2/3] Ressources to try
** TODO [6/7] GUI : imgui
https://github.com/ocornut/imgui
- examples_glfw_opengl2/3 work
*** DONE Compile with WAF a basic example 
*** DONE Define Play/Pause/Stop button
*** DONE Play/Pause Pattern without miniaudio engine
*** DONE ESC for quitting [02-pp-pattern]
*** DONE Set Window size [00-button]
*** TODO Adapt Window Size
*** DONE Scale things => ImGui::GetStyle().ScaleAllSizes(2.0f);
*** [4/4] Make my own basic example
**** DONE BPM =
**** DONE size = | unit = 
**** DONE unit x size button
**** DONE Play/Pause
**** Volume

** DONE [6/6] Audio : miniaudio
<<miniaudio>>
https://github.com/mackron/miniaudio
Engine où on peut "chaîner" des data_source
Il semble que l'on peut aussi dire quand on joue une source (ms)
*** DONE compile basic example (clave) with waf
*** DONE [3/3] Load clave and play regurlarly
**** DONE using std::this_thread::sleep_for(std::chrono::milliseconds(x));
**** DONE within a while loop, with delay for the next sound ?
**** either because engine can play at given time ?
**** DONE or by checking the time in callback loop ? => in PatternAudio
*** DONE Play/Pause SOUND !!!
*** DONE better args for drum_compagnon (sign bpm, pattern)
*** DONE logging with DEFINES
*** DONE Play/Pause/Stop Pattern (sequence of Sounds)

** DONE [/] docopt.cpp
https://github.com/docopt/docopt.cpp
* [0/7] Safe code
** TODO Ensure notes/sounds in PatternAudio exist in SoundEngine
** TODO clean up DEL
** TODO clean up TODO
** [1/2] when Ctrl-C, take time to destroy Objects
*** DONE Linux
- https://stackoverflow.com/questions/1641182/how-can-i-catch-a-ctrl-c-event
*** TODO Windows
- https://docs.microsoft.com/en-us/windows/console/registering-a-control-handler-function

** TODO Check LooperState and PatternState
** TODO Check common in Looper and Pattern
** TODO Check all _state are still needed (ex: ended ??)
** TODO When reading Looper from file, might need to delete some existing patterns
* [6/9] WINDOWS
** TODO Check still compiling
** 00-engine-play + CodeWorks/MinGW
works fine under VSC with C:\\Program Files (x86)\\CodeBlocks\\MinGW\\bin\\g++.exe in tasks.json and proper -I
** DONE 00-engine-play + MinGW64
works if one compiles with static
g++ -o play -I ../libs/miniaudio 00-engine-play.cpp -static-libgcc -static-libstdc++ -static
** ImGui examples => ds libs/imgui/examples/example_win32_directx12
g++ -o main main.cpp ../../backends/imgui_impl_dx12.cpp ../../backends/imgui_impl_win32.cpp ../../imgui*.cpp -I../.. -I../../backends -ld3d12 -ld3dcompiler -ldxgi
MAIS bug car MinGW n'utilise pas les même headers que Visual Studio
https://github.com/ocornut/imgui/pull/4604
** DONE installer VisualStudio ToolChain ? => build_gui.bat
with the current Visual Studio 2017
run C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat
run C:\Users\dutech.COOKIE01\Projets\drum_companion\libs\imgui\examples\example_win32_directx12>build_win32.bat
will build in Debug
** DONE faire GUI avec example pris dans libs/imgui/examples/example_win32_directx12
and no more GLFW stuff
** DONE faire build_bat avec GLFW_OPENGL3
** TODO pb Exception dans build avec build_bat
** TODO pb affichage unifont sous Windows ? (=> prendre le bon fichier)
** DONE avoir libboost pour cl => docopt.cpp
https://github.com/docopt/docopt.cpp
** DONE signal Ctrl-C for Windows
